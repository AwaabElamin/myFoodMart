# Maven
- task: DockerCompose@0
  inputs:
    containerregistrytype: 'Azure Container Registry'
    azureSubscription: 'Azure subscription 1(1)(f85118c2-9f73-4fca-a695-edeea853f217)'
    azureContainerRegistry: '{"loginServer":"awaabcontainerregistry.azurecr.io", "id" : "/subscriptions/f85118c2-9f73-4fca-a695-edeea853f217/resourceGroups/Awaab_Elamin_GB/providers/Microsoft.ContainerRegistry/registries/awaabContainerRegistry"}'
    dockerComposeFile: '**/docker-compose.yml'
    action: 'Push services'
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package' 
  env:
    MART_USERNAME: $(username)
    MART_PASSWORD: $(password)

- task: Maven@3
  displayName: "Build Docker Image"
  inputs:
    mavenPomFile: 'pom.xml'
    publishJUnitResults: false
    jdkVersionOption: '1.8'
    goals: 'spring-boot:build-image'
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    mavenVersionOption: 'Default'
    mavenOptions: '-Xmx3072m'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false
 - task: DockerCompose@0
   inputs:
     containerregistrytype: 'Azure Container Registry'
     azureSubscription: 'Azure subscription 1(1)(f85118c2-9f73-4fca-a695-edeea853f217)'
     azureContainerRegistry: '{"loginServer":"awaabcontainerregistry.azurecr.io", "id" : "/subscriptions/f85118c2-9f73-4fca-a695-edeea853f217/resourceGroups/Awaab_Elamin_GB/providers/Microsoft.ContainerRegistry/registries/awaabContainerRegistry"}'
     dockerComposeFile: '**/docker-compose.yml'
     quailifyImageNames: false
     action: 'Run a Docker Compose command'

